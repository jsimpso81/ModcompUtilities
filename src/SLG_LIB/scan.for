C-----SCAN.FOR
      SUBROUTINE SCAN(X,Y,NE,IDS)
      REAL*4 ZZZ(1)
      DIMENSION X(1),Y(1)
      DIMENSION AMIN(2),AMAX(2),MDS(2),KUNITS(10)
      DIMENSION JHT(2)
      COMMON /PLTCOM/
     &SAME,PREF(2),LDC(2),C(2),RORG(2),CMAT(10,3),LMT(2),
     &XYDOTS(2),SPX,SPY,MIX,NSKP,NBAD,
     &NPLOT,MINX,MAXX,NDX,NDY,LTYPE,LWDTH,DEGRAD,
     &NBITS,NBTM1,NBYTE,NBYM1,NCHAR,NCHM1,MSK(7),IBT(16)
      DATA KUNITS/1,2,4,4,5,6,8,8,10,10/
      DATA AMIN/1.7E38,1.7E38/,AMAX/-1.7E38,-1.7E38/
      DATA JHT/100,10/
C-----DECODE 'IDS' FOR DATA SCALING
      JDS=0
      DO 10 I=1,2
      J=JHT(I)
      K=MOD(IDS/J,10)
C-----GET X OR Y SCALES (=0) OR UNSCALED (=1) INFORMATION
C-----INCREMENTAL DATA IS NOT ALLOWED
      MDS(I)=IAND(ISHFT(K,-2), 1)
C-----GET X OR Y REAL (=0) OR INTEGER (=1),
C-----COORDINATE (=0) OR DELTA (=2), AND NOT INCREMENTAL (=0)
C-----OR INCREMENTAL (=8) INFORMATION
   10 JDS=JDS+IAND(K, 11)*J
      K=IABS(NE)
      IF (NE.EQ.0) GO TO 200
C-----SCAN UNSCALED DATA ARRAYS
C-----INITIALIZE SUBROUTINE 'FIND'
CC100 CALL FIND(0.0,0.0,0,JDS)
      ZZZ(1) = 0.0
      CALL FIND(ZZZ,ZZZ,0,JDS)
C-----EXTRACT AND PROCESS INDIVIDUAL COORDINATES
      J=1
      DO 190 L=1,K
      CALL FIND(X,Y,J,JDS)
C-----EXAMINE AND PROCESS EACH COORDINATE
      DO 180 I=1,2
C-----TEST FOR COORDINATE UNSCALED
      IF (MDS(I).EQ.0) GO TO 180
      TMP=C(I)
      IF (TMP.GT.AMAX(I)) AMAX (I)=TMP
      IF (TMP.LT.AMIN(I)) AMIN(I)=TMP
  180 CONTINUE
  190 J=J+MIX
      IF (NE.GT.0) GO TO 999
C-----COMPUTE SCALE FACTORS
  200 DO 490 I=1,2
C-----TEST FOR COORDINATE UNSCALED
      IF (MDS(I).EQ.0) GO TO 490
      TMIN=AMIN(I)
      TMAX=AMAX(I)
C-----GET UNSCALED WIDTH OR HEIGHT
      DIV=CMAT(7,I)
C-----CALCULATE INITIAL VALUE FOR DX
      TDX=(TMAX-TMIN)/DIV
C-----CORRECT FOR ALL DATA VALUES EQUAL
      IF (TDX.LE.0.0) TDX=ABS(TMAX/DIV)
C-----CORRECT FOR ALL DATA VALUES .EQ. 0
      IF (TDX.EQ.0.0) TDX=1.0
C-----SCALE DX TO THE RANGE 1 .LE. DX .LT. 10
  250 K=JFIX(ALOG10(TDX))
      TMP=10.0**K
      TDX=TDX/TMP
C-----GET THE CEILING OF DX
      K=-JFIX(-TDX)
C-----GET THE SMALLEST ACCEPTABLE VALUE FOR DX
      TDX=KUNITS(K)
C-----RESCALE DX
      TDX=TDX*TMP
C-----LOCATE UNSCALED ORIGIN
      TMP=-AFIX(TMIN/TDX)
C-----CALCULATE A NEW DX, TAKING ORIGIN INTO ACCOUNT
      TTDX=TMAX/(DIV-TMP)
C-----IF DX IS NOT BIG ENOUGH, TRY AGAIN
      IF (TDX.GE.TTDX) GO TO 260
      TDX=TTDX
      GO TO 250
  260 CONTINUE
C-----IF UNSCALED ORIGIN IS AT SCALED ORIGIN, DO NOT MOVE IT
      IF (TMP.EQ.0.0) GO TO 270
C-----CHOOSE NEW ORIGIN TO CENTER DATA
      TMP=TMP+AINT(0.5*(DIV-TMP+1.0-(TMAX/TDX)))
C-----CALCULATE TMIN
  270 TMIN=-TMP*TDX
C-----KEEP AXIS ON PAGE
      IF (TMP.LT.0.0) TMP=0.0
      IF (TMP.GT.DIV) TMP=DIV
C-----ENTER SCALE FACTORS INTO MODE TABLE
      J=7+I
      CMAT(J,1)=TMIN
      CMAT(J,2)=TDX
      CMAT(J,3)=TMP
C-----RE-INITIALIZE SCANNING PROCEDURES
      AMIN(I)=1.7E38
      AMAX(I)=-1.7E38
  490 CONTINUE
  999 RETURN
      END
