// ================================================================================================
//
//		Copyright 2023, 2024 James A. Simpson, all rights reserved.
//
// ================================================================================================
//
//	Module:			device_null_initial_boot_block.h
//
//	Description:	contains code for the initial boot block.
//
//	Externally accessible routines:
// 
// Notes:			This is the first thing loaded.  It currently doesn't work.
//
// ================================================================================================
//	Revision history:
//		6/20/2024	JAS		Added header
// ================================================================================================


// --------data to send to device when requested
SIMJ_U8 initial_boot_block[] = { 0x3F, 0x00, 0x00,														// 02
			0xED, 0x40, 0xFF, 0xD2, 0x78, 0x42, 0x00, 0x0F, 0x67, 0x3D, 0x70, 0x2E, 0x00, 0x00, 0x71, 0x4E,		// 18
	//	C---- - (0010)
			0x00, 0x18, 0xE5, 0x20, 0x00, 0x2E, 0xE5, 0x50, 0x00, 0x2F, 0x6D, 0x35, 0x78, 0x33, 0x00, 0x00,		// 34
			0x61, 0x2F, 0xF8, 0x32, 0x70, 0x5F, 0x00, 0x18, 0x7D, 0x33, 0x00, 0x17, 0xE5, 0x60, 0x00, 0x01,		// 50
	//	C---- - (0020)
			0x62, 0x64, 0xED, 0x40, 0x44, 0x00, 0xE6, 0x60, 0x00, 0x25, 0x00, 0x00, 0xFF, 0x02, 0xF7, 0x01,		// 66
			0xF7, 0x01, 0xF7, 0x01, 0x80, 0x00, 0x80, 0x80, 0xF7, 0x01, 0xF7, 0x01 };
	//                              B3LDR       B4LDR								off set

//									last mem loc index,		negative size
SIMJ_U8 boot100_loc_size[] = { 0x01, 0x80, 0xFF, 0x80 };	// 82


SIMJ_U8 boot100_data[] = {
	//	C---- - (0100)  // 83
	0xA4, 0x40, 0x00, 0x01, 0xE6, 0x40, 0x01, 0x7A, 0xE6, 0x40, 0x01, 0x71, 0xE6, 0x70, 0x01, 0x7C,
	0x62, 0x44, 0xE6, 0x40, 0x01, 0x78, 0xE6, 0x40, 0x01, 0x75, 0xED, 0x60, 0x01, 0x80, 0x6C, 0xFF,
	//	C---- - (0110)
	0xFE, 0xF6, 0x70, 0x6F, 0x01, 0x10, 0x63, 0x44, 0x62, 0x4F, 0xE6, 0x40, 0x01, 0x17, 0x00, 0x00,
	0x62, 0x4F, 0x63, 0x42, 0xFE, 0x4F, 0xED, 0x20, 0x0F, 0xE7, 0xED, 0x30, 0xF4, 0x19, 0x68, 0x33,
	//	C---- - (0120)
	0xED, 0x60, 0xFE, 0xDE, 0xE7, 0x70, 0x01, 0x71, 0xE7, 0xA0, 0x01, 0x62, 0x70, 0x6F, 0x01, 0x24,
	0xE7, 0x70, 0x01, 0x6E, 0x6C, 0xFF, 0x77, 0x8D, 0x01, 0x37, 0xE5, 0x80, 0x01, 0x43, 0x6D, 0x58,
	//	C---- - (0130)
	0x68, 0x53, 0x60, 0x5D, 0x76, 0x50, 0x01, 0x36, 0x6F, 0x83, 0x61, 0x8D, 0x6F, 0x88, 0xE7, 0x70,
	0x01, 0x71, 0x09, 0x94, 0xE7, 0xA0, 0x01, 0x62, 0x70, 0x8F, 0x01, 0x39, 0x76, 0xFF, 0x01, 0x48,
	//	C---- - (0140)
	0x65, 0xFF, 0x6B, 0x94, 0xEE, 0x90, 0x00, 0x00, 0x6D, 0x89, 0x61, 0x8D, 0x7F, 0x88, 0x01, 0x39,
	0xE7, 0x70, 0x01, 0x6E, 0x65, 0x4D, 0x78, 0x43, 0x01, 0x2D, 0xE7, 0x70, 0x01, 0x71, 0xE7, 0xA0,
	//	C---- - (0150)
	0x01, 0x62, 0x7D, 0x33, 0x01, 0x4F, 0xE7, 0x70, 0x01, 0x6E, 0xED, 0x30, 0xF4, 0x19, 0x6C, 0x44,
	0x61, 0x2F, 0xF8, 0x42, 0x70, 0x3F, 0x01, 0x58, 0x7D, 0x44, 0x01, 0x5F, 0xFF, 0x02, 0x00, 0x00,
	//	C---- - (0160)
	0xE7, 0x70, 0x01, 0x71, 0xE7, 0x70, 0x01, 0x7A, 0x76, 0x45, 0x01, 0x60, 0x76, 0x48, 0x01, 0x62,
	0xE7, 0x70, 0x01, 0x7C, 0x0C, 0x44, 0xAF, 0x42, 0x60, 0x3F, 0xFF, 0x0A, 0xED, 0x40, 0x44, 0x00,
	//	C---- - (0170)
	0xF7, 0x08, 0x00, 0x00, 0x76, 0x47, 0x01, 0x71, 0x65, 0x41, 0x00, 0x00, 0xED, 0x40, 0x81, 0x00,
	//                                                                                  SMBTI
	0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0xFF, 0x07 };

									// 0x00, 0x00, 0x00, 0x00
//								   chksum, 0
// 
// ================================================================================================
